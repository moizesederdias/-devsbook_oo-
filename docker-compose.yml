version: "3.7"
services:
  mysql_db2:
    image: mysql:5.7.29
    container_name: mysql_db2
    restart: unless-stopped
    tty: true
    command:
      mysqld --default-authentication-plugin=mysql_native_password --sql_mode=''    
    environment:
      #- MYSQL_DATABASE=sistemaw_ieb
      - MYSQL_ROOT_PASSWORD=moizes@2005
      - MYSQL_USER=adminuser
      - MYSQL_PASSWORD="@AdminUser@2005@"
      - SQL_MODE=''
    volumes:
      #- /mnt/HD/volumes/mysql-data:/var/lib/mysql
      #- /mnt/HD/volumes/mysql-conf:/etc/mysql/conf.d
      #- /mnt/HD/shared:/shared
      - /var/dockervolumes/bdmysql:/var/lib/mysql
    networks:
      allapps_default:
        ipv4_address: 192.168.100.2
    ports: 
      - "3306:3306"

  postgres:
    image: postgres:13
    container_name: postgresql-db
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      # - POSTGRES_DB=mydatabase
    volumes:
      #- /mnt/HD/volumes/postgres-data:/var/lib/postgresql/data
      #- /mnt/HD/shared:/shared
      - /var/dockervolumes/bdpostgresql:/var/lib/postgresql/data
    networks:
      allapps_default:
          ipv4_address: 192.168.100.3
    ports: 
      - "5432:5432"

  redis:
    image: bitnami/redis:4.0.14
    container_name: redis
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=docker
    volumes:
      #- /mnt/HD/volumes/redis-data:/bitnami/redis/data
      - /var/dockervolumes/redis-data:/bitnami/redis/data
    ports:
      - "6379:6379"
    networks:
      allapps_default:
        ipv4_address: 192.168.100.6

  rabbitmq:
    image: bitnami/rabbitmq:3.8.3
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_USERNAME=docker
      - RABBITMQ_PASSWORD=docker
    volumes:
      #- /mnt/HD/volumes/rabbitmq-data:/bitnami
      - /var/dockervolumes/rabbitmq-data:/bitnami
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      allapps_default:
          ipv4_address: 192.168.100.7      

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
    - 8087:80
    restart: always
    tty: true
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_USERNAME=adminuser
      - MYSQL_ROOT_PASSWORD="@AdminUser@2005@"
      - PMA_HOST=mysql_db
    volumes:
      #- bancodados:/var/lib/phpmyadmin
      - /var/phpmyadmin/rabbitmq-data:/var/lib/phpmyadmin
    networks:
      allapps_default:
        ipv4_address: 192.168.100.8
    depends_on:
      - mysql_db2
    links:
      - mysql_db2

  devsbook-oo-php:
    build:
      args:
        user: moizes
        uid: 1000
      context: .
      dockerfile: Dockerfile
    image: moizesdocker/php74fpm:1.0
    container_name: devsbook-oo-php-app
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html/devsbook-oo-php
    ports:
      - 8691:8000
    # To create/change a root password in a running container: docker exec -itu root {containerName} passwd
    #command: composer create-project laravel/laravel .
    #command: composer install
    #command: php artisan key:generate 
    #command: php artisan jwt:secret
    #command: php artisan cache:clear
    #command: php artisan config:clear
    #command: php artisan optimize
    #command: chmod -R 777 bootstrap/cache
    #command: chgrp -R www-data storage bootstrap/cache && \
    #             chown -R www-data storage bootstrap/cache && \
    #             chmod -R 775 * && \
    #             chmod -R ug+rwx storage bootstrap/cache && \
    #             touch storage/logs/laravel.log && chmod 775 storage/logs/laravel.log && chown www-data storage/logs/laravel.log
    # command: php artisan serve --host=0.0.0.0 --port=8000
    command: bash -c "php -S 0.0.0.0:8000 -t /var/www/html/devsbook-oo-php"
    environment:
      SERVICE_NAME: devsbook-oo-php-app
      SERVICE_TAGS: dev
      REDIS_HOST: 'redis'
      MYSQL_HOST: 'mysql_2db'      
    volumes:
      - ./:/var/www/html/devsbook-oo-php
    external_links:
      - mysql_db2:mysql_db2    
      - redis:redis
    networks:
      allapps_default:
        ipv4_address: 192.168.100.91
    #depends_on:
        #- redis:redis
        #- mysql_db2:mysql_db2

  https-portal:
#   Definindo a versão do https-portal
    image: steveltn/https-portal:1
#   'Apontando' a pasta atual para o diretório /var/www/ dentro do container
    volumes:
      - "./certificados/:/var/lib/https-portal"
#   Apontando as portas 80 e 443 do container para as portas 80 e 443 da máquina
    ports:
      - '80:80'
      - '443:443'
#   Relacionando o container do https-portal com o servidor
    links:
      - devsbook-oo-php
    #restart: always
#   Configurações de ambiente
    environment:
      DOMAINS: 'teste.local -> http://devsbook-oo-php:8000'
#     Definindo o ambiente como local
      STAGE: 'local'
#     Impedindo a renovação ao subir o container
      FORCE_RENEW: 'false'
    networks:
      - allapps_default

networks:
  allapps_default:
    name: allapps_default
    external: true
    #driver: macvlan
    #enp3s0 #wlp4s0
    #driver_opts:
      #parent: enp3s0    
    #ipam:
      #config:
        #- subnet: 192.168.100.0/16
